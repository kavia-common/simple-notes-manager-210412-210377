{"is_source_file": true, "format": "Java", "description": "This Java class 'NoteService' provides service layer operations for managing 'Note' entities, including create, read, update, and delete (CRUD) functionalities, with audit trail support and role-based access control.", "external_files": ["com/example/notes/audit/AuditService", "com/example/notes/audit/AuditAction", "com/example/notes/config/SecurityStubs/RequiresRole", "com/example/notes/config/SecurityStubs/RequestContext", "jakarta/persistence/EntityNotFoundException", "org/springframework/data/domain/Page", "org/springframework/data/domain/PageRequest", "org/springframework/data/domain/Sort", "org/springframework/stereotype/Service", "java/time/OffsetDateTime", "java/base/UUID"], "external_methods": ["RequestContext.getUser()", "repository.save()", "repository.findById()", "repository.findAll()", "repository.findByTitleContainingIgnoreCase()", "repository.delete()", "auditService.record()"], "published": ["NoteService"], "classes": [{"name": "NoteService", "description": "Service layer for Note CRUD with GxP audit trail."}], "methods": [{"name": "create", "description": "Creates a new Note, sets creation and update metadata, and records an audit trail."}, {"name": "getAll", "description": "Retrieves all notes with optional filtering by title, supports pagination and sorting."}, {"name": "getById", "description": "Fetches a specific Note by its UUID, throws exception if not found."}, {"name": "update", "description": "Updates an existing Note, copies its previous state for auditing, and updates metadata."}, {"name": "delete", "description": "Deletes a Note by UUID, optionally requiring an electronic signature, and records an audit trail."}, {"name": "copy", "description": "Creates a shallow copy of a Note object using BeanUtils."}], "calls": ["RequestContext.getUser()", "repository.save()", "repository.findById()", "repository.findAll()", "repository.findByTitleContainingIgnoreCase()", "repository.delete()", "auditService.record()"], "search-terms": ["NoteService", "audit trail", "role-based access", "CRUD operations", "Spring Data Pageable", "entity metadata", "GxP audit"], "state": 2, "file_id": 17, "knowledge_revision": 38, "git_revision": "", "hash": "ffbe459467acc6e76589694bf71674cc", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/main/java/com/example/notes/notes/NoteService.java", "revision_history": [{"38": ""}]}