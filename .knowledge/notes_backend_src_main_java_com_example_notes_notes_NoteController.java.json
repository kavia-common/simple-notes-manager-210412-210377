{"is_source_file": true, "format": "Java", "description": "Spring Boot REST controller for managing notes, providing CRUD endpoints with role-based security and API documentation annotations.", "external_files": ["com/example/notes/config/SecurityStubs/RequiresRole.java", "io/swagger/v3/oas/annotations/Operation.java", "io/swagger/v3/oas/annotations/Parameter.java", "io/swagger/v3/oas/annotations/media/Content.java", "io/swagger/v3/oas/annotations/media/Schema.java", "io/swagger/v3/oas/annotations/responses/ApiResponse.java", "io/swagger/v3/oas/annotations/tags/Tag.java", "org.springframework/web/bind/annotation/*", "org.springframework/http/*", "org.springframework/data/domain/Page.java", "org.springframework.beans.factory.annotation.Value.java", "jakarta.validation.*", "com/example/notes/notes/Note.java", "com/example/notes/notes/NoteService.java"], "external_methods": ["service.create()", "service.getAll()", "service.getById()", "service.update()", "service.delete()"], "published": ["NoteController"], "classes": [{"name": "NoteController", "description": "REST controller for CRUD operations on notes, equipped with security, validation, and OpenAPI documentation annotations."}], "methods": [{"name": "create", "description": "Creates a new note with validation, role requirement, and API documentation."}, {"name": "list", "description": "Lists notes with pagination, optional title filtering, and sorting, accessible to users with ROLE_USER."}, {"name": "get", "description": "Retrieves a note by its UUID, accessible to users with ROLE_USER."}, {"name": "update", "description": "Updates an existing note by UUID, with validation and role restriction to ROLE_USER."}, {"name": "delete", "description": "Deletes a note by UUID, optionally requiring an electronic signature header, restricted to ROLE_ADMIN."}], "calls": ["service.create()", "service.getAll()", "service.getById()", "service.update()", "service.delete()"], "search-terms": ["NoteController", "REST controller", "Note CRUD", "Spring Boot annotations", "API documentation", "role-based security", "UUID note ID"], "state": 2, "file_id": 18, "knowledge_revision": 40, "git_revision": "", "hash": "126c2d823267b207b8dccb160d89402a", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/main/java/com/example/notes/notes/NoteController.java", "revision_history": [{"40": ""}]}